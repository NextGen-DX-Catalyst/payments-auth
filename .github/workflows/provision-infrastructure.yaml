name: Terraform

on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}

jobs:
  terraform_plan:
    runs-on: ubuntu-latest
    outputs:
      plan-exists: ${{ steps.check-plan.outputs.plan-exists }}

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: '1.1.0' # Specify your Terraform version here

    - name: Terraform Init
      run: terraform init

    - name: Terraform Plan
      id: plan
      run: |
        terraform plan -out=tfplan
        terraform show -json tfplan > plan.json
      continue-on-error: true

    - name: Upload Terraform Plan for Review
      if: steps.plan.outcome == 'success'
      uses: actions/upload-artifact@v2
      with:
        name: terraform-plan
        path: plan.json

    - name: Check if Plan Exists
      id: check-plan
      run: |
        if [ -f plan.json ]; then
          echo "::set-output name=plan-exists::true"
        else
          echo "::set-output name=plan-exists::false"
        fi

  terraform_apply:
    runs-on: ubuntu-latest
    needs: terraform_plan
    if: github.event_name == 'workflow_dispatch' && needs.terraform_plan.outputs.plan-exists == 'true'

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Download Terraform Plan
      uses: actions/download-artifact@v2
      with:
        name: terraform-plan
        path: .

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: '1.1.0' # Specify your Terraform version here

    - name: Terraform Apply
      run: terraform apply tfplan

